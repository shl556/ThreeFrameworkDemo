<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >
<hibernate-mapping>
<class name="com.bar3.domain.Post">
<id name="Id" type="long">
<meta attribute="use-in-tostring">true</meta>
<meta attribute="scope-set">private</meta>
<generator class="native"></generator>
</id>
<version name="version" type="integer"/>
<property name="title" type="string" length="100" not-null="true">
<meta attribute="use-in-tostring">true</meta>
</property>
<property name="postContent" type="string" >
<meta attribute="use-in-tostring">true</meta>
<column name="POSTCONTENT" sql-type="text" ></column>
</property>
<property name="createTime" type="date">
<meta attribute="use-in-tostring">true</meta>
<column name="CTEATETIME" sql-type="timestamp"></column>
</property>
<property name="modifyTime" type="date">
<meta attribute="use-in-tostring">true</meta>
<column name="MODIFYTIME" sql-type="timestamp"></column>
</property>
<property name="replySum" type="integer" formula="(select count(*) from Reply a where a.postid=ID)"></property>
<set name="replys" inverse="true" order-by="MODIFYTIME ASC">
<key column="POSTID"></key>
<one-to-many class="com.bar3.domain.Reply"/>
</set>
<!--
建立多对一映射，主题为多，主题所属的版块为一。lazy属性默认为proxy，表示对关联的
Kind对象使用延迟检索策略并且使用代理。如果为false表示Hibernate从数据库中加载
Post对象时会立即加载与它关联的Kind对象。
生成ddl时根据many-to-one元素建立外键约束。
默认情况下Hibernate不会级联更新或者保存与其关联的临时对象，即保存Post对象时不会同时保存更新与之
关联的kind和user对象，此时数据库中没有与kind或者user对应的数据记录，post表中Post对象对应的
记录中kindId和userId为空，违反完整性约束，报异常。
可以设置cascade的属性为“sava-update”表明保存或者更新当前对象时会级联保存或更新与其关联的临时对象
 -->
<many-to-one name="kind" 
             column="KINDID"
             class="com.bar3.domain.Kind"
             not-null="true"
             ></many-to-one>
<many-to-one name="user"
             column="USERID"
             class="com.bar3.domain.User"
             not-null="true"
             lazy="no-proxy"></many-to-one>
</class>
</hibernate-mapping>