package com.bar3.strustDemo.freemarker;

public class FreeMarkerDemo {
	/*
	 * 为模板准备的数据整体被称作为 数据模型。 模板作者要关心的是，数据模型是树形结构(就像硬盘上的文件夹和文件)。
	 * 标量用于存储单一的值。这种类型的值可以是字符串，数字，日期/时间或者是布尔值
	 * 哈希表是一种存储变量及其相关且有唯一标识名称的容器，如树状数据模型中扮演目录的角色。哈希表存储其他变量(被称为 子变量)， 它们可以通过名称来查找。
	 * 如果要在模板中使用子变量， 那应该从根root开始指定它的路径，每级之间用点来分隔开。
	 * 另外一种很重要的变量是 sequences (序列，译者注)。 它们像哈希表那样存储子变量，但是子变量没有名字，它们只是列表中的项。
	 * 要访问序列的子变量，可以使用方括号形式的数字索引下标。 索引下标从0开始(从0开始也是程序员的传统)，那么第一项的索引就是0， 第二项的索引就是1等等。
	 */
	/*
	 * ${...}： FreeMarker将会输出真实的值来替换大括号内的表达式，这样的表达式被称为 interpolation(插值，译者注)
	 * FTL 标签 (FreeMarker模板的语言标签,又称ftp指令)： FTL标签和HTML标签有一些相似之处，但是它们是FreeMarker的指令，是不会在输出中打印的。
	 *  这些标签的名字以 # 开头。(用户自定义的FTL标签则需要使用 @ 来代替 #）
	 *  
	 * 
	 */
}
